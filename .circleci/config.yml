version: 2.1

setup: true

environment_common: &environment_common
  environment:
    CI: true

macos_common: &macos_common
  macos:
    xcode: "16.2"
  resource_class: macos.m1.medium.gen1

jobs:

  build-and-deploy-testflight-beta:
    <<: *environment_common
    <<: *macos_common
    steps:
      - checkout
      - macos/switch-ruby:
          version: "3.2"
      - restore_cache:
          key: 1-gems-{{ checksum "Gemfile.lock" }}
      - run:
          name: Bundle install
          command: bundle check || bundle install --path vendor/bundle
      - save_cache:
          key: 1-gems-{{ checksum "Gemfile.lock" }}
          paths:
            - vendor/bundle
      - run:
          name: Verify github
          command: for ip in $(dig @8.8.8.8 github.com +short); do ssh-keyscan github.com,$ip; ssh-keyscan $ip; done 2>/dev/null >> ~/.ssh/known_hosts
      - run:
          name: extract Staging XCConfig
          command: echo "$STAGING_XCCONFIG" | base64 --decode > firefox-ios/Client/Configuration/Staging.xcconfig
      - run:
          name: Execute bootstrap
          command: ./bootstrap.sh
      - run:
          name: Build and deploy to Testflight
          command: bundle exec fastlane testflight_beta

  build-and-deploy-firebase-and-browserstack:
    <<: *environment_common
    <<: *macos_common
    steps:
      - checkout
      - macos/switch-ruby:
          version: "3.2"
      - restore_cache:
          key: 1-gems-{{ checksum "Gemfile.lock" }}
      - run:
          name: Bundle install
          command: bundle check || bundle install --path vendor/bundle
      - save_cache:
          key: 1-gems-{{ checksum "Gemfile.lock" }}
          paths:
            - vendor/bundle
      - run:
          name: Verify github
          command: for ip in $(dig @8.8.8.8 github.com +short); do ssh-keyscan github.com,$ip; ssh-keyscan $ip; done 2>/dev/null >> ~/.ssh/known_hosts
      - run:
          name: Extract Staging XCConfig
          command: echo "$STAGING_XCCONFIG" | base64 --decode > firefox-ios/Client/Configuration/Staging.xcconfig
      - run:
          name: Execute bootstrap
          command: ./bootstrap.sh
      - run:
          name: Build the Ecosia app
          command: bundle exec fastlane build_ecosia_app
      - run:
          name: Upload to Firebase
          command: bundle exec fastlane upload_to_firebase
      - run:
          name: Upload to Browserstack
          command: bundle exec fastlane upload_to_browserstack
      - jira/notify:
          issue_regexp: "([A-Za-z]{2,30}-[0-9]+)"
          pipeline_id: << pipeline.id >>
          pipeline_number: << pipeline.number >>
orbs:
  path-filtering: circleci/path-filtering@0.1.1
  macos: circleci/macos@2
  jira: circleci/jira@2.0

workflows:
  build-and-upload-to-delivery-platforms:
    jobs:
      - path-filtering/filter:
          filters:
            branches:
              only:
                - /^.*main.*/
          name: Deploy release version over Testflight if MARKETING_VERION file updated
          config-path: .circleci/deploy-release.yml
          mapping: |
            Client/Configuration/Common.xcconfig deploy-release true
      - build-and-deploy-testflight-beta:
          name: Deploy beta version over Testflight
          filters:
            tags:
              only: /^beta.*/
            branches:
              ignore: /.*/
      - build-and-deploy-firebase-and-browserstack:
          name: Deploy ad-hoc version over Firebase + Upload to Browserstack
          filters:
            branches:
              only: 
                - /^.*main.*/
          context: napps