name: 'Prepare environment'
description: 'This action contains all the usual steps needed to setup the environment and restore caches when available'

inputs:
  core-token:
    description: 'The iOS core token'
    required: true

runs:
  using: "composite"
  steps:
    - name: Xcode Select Version
      uses: mobiledevops/xcode-select-version-action@v1
      with:
        xcode-select-version: 16.2

    - name: Cache iOS 18.2 Simulator Runtime
      id: cache-ios-simulator
      uses: actions/cache@v3
      with:
        path: /Library/Developer/CoreSimulator/Profiles/Runtimes/iOS 18.2.simruntime
        key: ios-18.2-simruntime-${{ runner.os }}
        
    - name: Check iOS 18.2 Runtime Availability
      id: check-runtime
      shell: bash
      run: |
        if xcrun simctl list runtimes | grep -q "iOS 18.2"; then
          echo "iOS 18.2 runtime is already installed."
          echo "runtime_installed=true" >> $GITHUB_OUTPUT
        else
          echo "iOS 18.2 runtime not found. Will install."
          echo "runtime_installed=false" >> $GITHUB_OUTPUT
        fi
        
    - name: Install iOS 18.2 Simulator Runtime
      if: steps.cache-ios-simulator.outputs.cache-hit != 'true' && steps.check-runtime.outputs.runtime_installed != 'true'
      shell: bash
      run: xcodebuild -downloadPlatform iOS -buildVersion 18.2
      
    - name: Check if iPhone 16 iOS 18.2 Simulator Exists
      id: check-simulator
      shell: bash
      run: |
        if xcrun simctl list devices | grep -q "iPhone16-iOS18.2"; then
          echo "Simulator already exists."
          echo "simulator_exists=true" >> $GITHUB_OUTPUT
        else
          echo "Simulator not found. Will create it."
          echo "simulator_exists=false" >> $GITHUB_OUTPUT
        fi
        
    - name: Create iOS 18.2 Simulator
      if: steps.check-simulator.outputs.simulator_exists != 'true'
      shell: bash
      run: xcrun simctl create "iPhone16-iOS18.2" "com.apple.CoreSimulator.SimDeviceType.iPhone-16" "com.apple.CoreSimulator.SimRuntime.iOS-18-2"
      
    - name: List Available Simulators
      shell: bash
      run: xcrun simctl list devices

    - name: Fix-up private Github URLs
      shell: bash
      run: find . -type f \( -name '*.pbxproj' -o -name 'Package.swift' -o -name 'Package.resolved' \) -exec sed -i '' "s/https:\/\/github.com\/${GITHUB_REPOSITORY_OWNER}/https:\/\/${GITHUB_ACCESS_TOKEN}@github.com\/${GITHUB_REPOSITORY_OWNER}/g" {} \;
      env:
        GITHUB_ACCESS_TOKEN: ${{ inputs.core-token }}

    - uses: actions/setup-python@v4
      with:
        python-version: '3.12.2'
        cache: 'pip'

    - name: Install gems
      uses: ruby/setup-ruby@v1
      with:
        ruby-version: 3.3
        bundler-cache: true

    - name: Install npm
      uses: bahmutov/npm-install@v1

    # lot of people are experiencing the same issue apparently
    # found a workaround here https://github.com/actions/runner-images/issues/9577
    - name: Delete Xcode.app
      shell: bash
      run: sudo rm -rf /Applications/Xcode.app
      
    - name: Restore SPM Cache
      id: restore-spm-cache
      uses: actions/cache/restore@v3
      with:
        path: SourcePackages/
        key: ${{ runner.os }}-spm-cache-${{ hashFiles('firefox-ios/Client.xcodeproj/project.xcworkspace/xcshareddata/swiftpm/Package.resolved') }}

    - name: Install SPM if cache not found
      shell: bash
      if: steps.restore-spm-cache.outputs.cache-hit != 'true'
      run: xcodebuild -resolvePackageDependencies -clonedSourcePackagesDirPath "firefox-ios/SourcePackages/"

    - name: Save SPM Cache if needed
      if: steps.restore-spm-cache.outputs.cache-hit != 'true'
      uses: actions/cache/save@v3
      with:
        path: firefox-ios/SourcePackages/
        key: ${{ runner.os }}-spm-cache-${{ hashFiles('firefox-ios/Client.xcodeproj/project.xcworkspace/xcshareddata/swiftpm/Package.resolved') }}  

    - name: Extract Staging XCConfig
      shell: bash
      run: echo "$STAGING_XCCONFIG" | base64 --decode > firefox-ios/Client/Configuration/Staging.xcconfig

    - name: Run bootstrap script
      shell: bash
      run: ./bootstrap.sh