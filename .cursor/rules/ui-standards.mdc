---
description: 
globs: 
alwaysApply: true
---
# UI Development Standards

## SwiftUI First Approach

- Use SwiftUI for new UI components
- Only use UIKit when SwiftUI is insufficient
- Implement theming through the `Theme` system
- Support all accessibility features:
  - Dark mode compatibility
  - Dynamic Type support
  - VoiceOver support
  - Reduce Motion preference

## Layout and Design

- Use `SafeArea` and `GeometryReader` for proper layout adaptation
- Handle all screen sizes and orientations (iPhone, iPad)
- Implement proper keyboard handling and dismissal
- Follow Apple's Human Interface Guidelines
- Use consistent spacing and design tokens from the design system

## Performance

- Use Instruments for performance profiling
- Implement lazy loading for views and data
- Optimize network requests with proper caching strategies
- Handle background processing efficiently
- Maintain clean, performant state management
- Prevent memory leaks and retain cycles
- Use `@StateObject` vs `@ObservedObject` appropriately
- Implement efficient list rendering with `LazyVStack`/`LazyHStack`
