---
description: 
globs: 
alwaysApply: true
---
# Ecosia-Specific Guidelines

## Code Customization

- Use "Ecosia:" comments to mark Ecosia customizations in Firefox code
- Use `//` for new code introductions
- Use `/* */` for commenting out existing Firefox code
- Maintain separation between Firefox base and Ecosia customizations
- Follow the Framework approach for Ecosia-specific code

## Analytics Implementation

- **ALL** analytics instrumentation must be implemented at the UI/ViewModel layer
- Use `Analytics.shared` (never reassign the shared instance)
- Follow established event patterns in `Analytics.Values.swift`
- Track user actions, not internal system events
- Example: `Analytics.shared.activity(.homePageViewed)`
- Implement proper feature flagging for A/B testing
- Handle market-specific configurations via `markets.json`

## Testing Requirements

- **MANDATORY**: Include tests when writing new code or implementing features
- Use Given/When/Then structure with minimal, relevant comments only
- For protocol default implementations: verify actual dependencies are called, not mock call counts
- Create testable implementations with injectable dependencies
- Snapshot tests: Use `SnapshotBaseTests` base class with proper theme setup
- Unit tests: Place in `EcosiaTests/` with clear file organization
- Write unit tests using XCTest for business logic
- Implement UI tests using XCUITest for critical user flows
- Test all accessibility features and edge cases
- Use mocks and dependency injection for testable code
- Test performance scenarios and memory usage
- Follow TDD principles where appropriate

## Security

- Encrypt sensitive data using Keychain Services
- Use secure communication (Certificate pinning where needed)
- Implement biometric authentication for sensitive operations
- Follow App Transport Security requirements
- Validate and sanitize all user inputs
- Handle sensitive data appropriately (passwords, personal info)
- Follow Mozilla's security guidelines
